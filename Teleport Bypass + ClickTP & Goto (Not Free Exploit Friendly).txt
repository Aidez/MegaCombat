local Prefix = ":" -- Prefix for when you're doing the bypass commands (":bypass" ":unbypass")
local BypassCommandNames = {"bypass","teleportbypass","bypassteleport","tpbypass","tpb"}
local UnBypassCommandNames = {"unbypass","unteleportbypass","unbypassteleport","untpbypass","untpb"}
local ClickTpEnabled = true -- set to false if you don't want click TP on
local ClickTpKey = "t" -- The key you want clicktp to be set to

------------------------------------

repeat wait() until game.Players ~= nil
repeat wait() until game.Players.LocalPlayer ~= nil

local LocalP = game.Players.LocalPlayer
local mouse = LocalP:GetMouse()
local bypass = false
local fakemodel = Instance.new("Model")
fakemodel.Parent = game.Workspace
local fakehumanoid = Instance.new("Humanoid")
local meta = getrawmetatable(game) -- rip free exploits :sob:
setreadonly(meta,false)
local namecall = meta.__namecall
local newindex = meta.__newindex
local index = meta.__index

local function sendnotif(title, body)
    game.StarterGui:SetCore("SendNotification", {
        Title = title;
        Text = body;
        Icon = "rbxassetid://2541869220";
        Duration = 3;
    })
end

local function bypassbindablefunc(content)
    if LocalP.Character ~= nil then
        LocalP.Character:BreakJoints()
    end
    bypass = true
end

local bypassbindable = Instance.new("BindableFunction")
bypassbindable.OnInvoke = bypassbindablefunc

local function bypassprompt()
    game.StarterGui:SetCore("SendNotification", {
        Title = "No bypass!";
        Text = "You need to turn the bypass on to use this feature!";
        Icon = "rbxassetid://1221422603";
        Duration = 5;
        Callback = bypassbindable;
        Button1 = "Turn on bypass";
    })
end

local function getargs(inputstring, lower)
    if lower ~= nil then
        if lower then
            inputstring = string.lower(inputstring)
        end
    end
    local Args = {}
    local spaces = {}
    local lastspace = 0
    inputstring = string.gsub(inputstring, "/e ", "")
    if string.find(string.sub(inputstring,1,1), "%p") or string.sub(inputstring,1,1) == Prefix then
        inputstring = string.sub(inputstring, 2, -1)
    end
    repeat
        local currentspace = string.find(inputstring, " ", lastspace + 1)
        if currentspace ~= nil then
            table.insert(spaces, currentspace)
            lastspace = currentspace
        else
            lastspace = currentspace
        end
    wait()
    until lastspace == nil
    if #spaces >= 2 then
        Args.Command = string.sub(inputstring, 1, spaces[1] - 1)
    elseif #spaces == 1 then
        Args.Command = string.sub(inputstring, 1, spaces[1] - 1)
        Args[1] = string.sub(inputstring, spaces[1] + 1, -1)
    elseif #spaces == 0 then
        Args.Command = string.sub(inputstring, 1, - 1)
    end
    if #spaces >= 2 then 
        for i = 1,#spaces do
            if i ~= 1 and i ~= #spaces then
                Args[i - 1] = string.sub(inputstring, spaces[i - 1] + 1, spaces[i] - 1)
            elseif i == #spaces then
                Args[i - 1] = string.sub(inputstring, spaces[i - 1] + 1, spaces[i] - 1)
                Args[i] = string.sub(inputstring, spaces[i] + 1, -1)
            end
        end
    end
    return Args
end

local function findplayer(namey)
    if type(namey) ~= "string" then
        return nil
    end
    local name = string.lower(namey)
    local player = nil
                    
    local names = game.Players:GetChildren()                      
    for i,v in pairs(names) do
        local strlower = string.lower(v.Name)
        local sub = string.sub(strlower,1,#name)                                     
        if name == sub and v ~= LocalP then 
            player = v
        end
    end
    if player then 
        return player
    else
        return nil
    end
end

local function IsInTable(table, tofind)
    local found = false
    for i,v in pairs(table) do
        if v == tofind then
            found = true
            break
        end
    end
    return found
end

for i = 1,#BypassCommandNames do
    BypassCommandNames[i] = string.lower(tostring(BypassCommandNames[i]))
end
for i = 1,#UnBypassCommandNames do
    UnBypassCommandNames[i] = string.lower(tostring(UnBypassCommandNames[i]))
end

meta.__namecall=function(self,...)
    if not checkcaller() then
        local Args={...}
        local method = getnamecallmethod()
        if method == "BreakJoints" and tostring(self) == game.Players.LocalPlayer.Character.Name then
            return namecall(fakemodel,...)
        end
        if method == "FireServer" then 
            if self.Name == "lIII" or tostring(self.Parent) == "ReplicatedStorage" then 
                return wait(9e9)
            end
            if Args[1] == "hey" then 
                return wait(9e9)
            end
        end
        if method == "ClearAllChildren" or method == "Destroy" then 
            return 
        end 
        if string.lower(method) == "waitforchild" then
            if Args[1] == "HumanoidRootPart" then
                if bypass then
                    Args[1] = "Torso"
                    return namecall(self,unpack(Args))
                end
            end
        end
        if string.lower(method) == "findfirstchild" then
            if Args[1] == "HumanoidRootPart" then
                if bypass then
                    Args[1] = "Torso"
                end
            end
        end
    end
    if checkcaller() then
        local Args={...}
        local method = getnamecallmethod()
        if string.lower(method) == "findfirstchild" then
            if Args[1] ~= nil then
                if Args[1] == "HumanoidRootPartP" then
                    Args[1] = "HumanoidRootPart"
                    return namecall(self,unpack(Args))
                end
            end
        end
    end
    return namecall(self,...)
end
meta.__index=function(self,k)
    local Script=getfenv(2).script
    if checkcaller() then
        if k == "HumanoidRootPart" and tostring(t)==tostring(player) then
            if bypass then
                if getcallingscript then
                    if getcallingscript() ~= script then
                        return index(self,"Torso")
                    end
                else
                    if get_calling_script(2) ~= script then
                        return index(self,"Torso")
                    end
                end
            end
        end
    end
    return index(self,k)
end

meta.__newindex=newcclosure(function(self,k,new)
    if not checkcaller() or not is_protosmasher_caller() then
        if tostring(self) == "Humanoid" and tostring(k) == "Health" then
            return newindex(fakehumanoid,k,new)
        end
    end
    return newindex(self,k,new)
end)

mouse.KeyDown:Connect(function(key)
    if key == ClickTpKey and ClickTpEnabled then
       if mouse.Target and bypass then
            if LocalP.Character ~= nil then
                if LocalP.Character:FindFirstChild("Torso") then
                    local torso = LocalP.Character.Torso
                    local orient = torso.CFrame - torso.CFrame.p
                    torso.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z) * orient
                end
            end
        elseif mouse.Target and not bypass and LocalP:DistanceFromCharacter(mouse.Hit.p) < 45 then
            if LocalP.Character ~= nil then
                if LocalP.Character:FindFirstChild("HumanoidRootPart") then
                    local hum = LocalP.Character.HumanoidRootPart
                    local orient = hum.CFrame - hum.CFrame.p
                    hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z) * orient
                end
            end
        end
    end
end)

game.Players.LocalPlayer.Chatted:Connect(function(msg)
    lower = string.lower(msg)
    if not string.find(msg, Prefix) and not string.find(msg, "/e ") then
        return
    end
    local Args = getargs(msg, true)

    if IsInTable(BypassCommandNames, Args.Command) then
  	game.Players.LocalPlayer.Character:BreakJoints()
        bypass = true
        sendnotif("notification", "TP Bypass is now ON!")
    end
    if IsInTable(UnBypassCommandNames, Args.Command) then
 	game.Players.LocalPlayer.Character:BreakJoints()
        bypass = false
        sendnotif("notification", "TP Bypass is now OFF!")
    end
    if Args.Command == "goto" or Args.Command == "to" then
        if not bypass then
            bypassprompt()
            return
        end
        local inputname = Args[1]
        if inputname ~= nil and inputname ~= "" then
            local player = findplayer(inputname)
            if player ~= nil then
                if player.Character ~= nil then
                    if player.Character:FindFirstChild("Torso") then
                        LocalP.Character.Torso.CFrame = player.Character.Torso.CFrame
                    end
                end
            end
        end
    end
end)

game:GetService('RunService').Stepped:connect(function()
    if bypass then
        --pcall(function()
            local Root = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPartP")
            if Root then
                game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPartP").Parent = nil
            end
                -- game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPartP").Parent = nil
        --end)
    end
end)

print("")
if ClickTpEnabled then
    print(string.upper(ClickTpKey).." Key - Teleport to your mouse's position")
    print("")
end
print(Prefix..BypassCommandNames[1].." - turn ON the teleport bypass")
print(Prefix..UnBypassCommandNames[1].." - turn OFF the teleport bypass")
print("")
print(Prefix.."goto PLAYERNAME - Teleport to player")
print("")

--[[
                                                        ..                                          
                                     /yys.            `hMM/                                        
                    :ys:            `NMMMo            oMMM:                                        
                  `sMMMm             -oo:            `NMMy                                          
                 .hMMMMM+                            +MMN`        `.-::.              `            
                -mMMyoMMN.         /hho       .:syhhomMMs       -smNMMMNy  `shysssssyhdho          
               :mMMs``dMMd`        NMMm     .smMNdhdMMMM.     `sNMNs:/MMM. `ydmmmmddMMMN+          
              +NMMs   -MMMs       :MMM/    +NMNs-  .MMMy     .dMMd- -yMMy    `````/hMMy-            
            `yMMMmosyhdMMMM+      yMMm    yMMN:   `yMMM/     dMMN+odNMd/        :hMNy:              
           -dMMMMMMmmdhyhMMM+     NMMo   /MMM-   :dMMMM-    :MMMMNmho-``:/    :hNMh-                
          +NMMm//-..``  `hMMMo`  -MMM/   yMMm``:hNMyMMM+.-- :MMMy.` `-omMd` /dMMmo/+oooo/`          
         oMMMh.          `yMMMm/ :MMMs   +MMMmmMNh: hMMNNNy  yMMMmhdmNMm+`:dMMMMNNNNmNMMMo          
         :yh+`            `/dNNs `ydh:    :shys/.   `+yso-`   :shddhy+-` oNMNho:-..```.-/`  
 
Join my discord here!:
https://discord.gg/Ez2dGeQ
 
This script includes mega combat's teleport bypass, clicktp, and goto command
Change the command names and click tp key at the top of the script

--]]